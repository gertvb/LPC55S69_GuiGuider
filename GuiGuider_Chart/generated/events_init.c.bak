/*
 * Copyright 2021 NXP
 * SPDX-License-Identifier: MIT
 */

#include "events_init.h"
#include <stdio.h>
#include "lvgl/lvgl.h"
static unsigned int counter = 0;
static char buf[4];





void events_init(lv_ui *ui)
{
}

static void screen_plusevent_handler(lv_obj_t * obj, lv_event_t event)
{
	switch (event)
	{
	case LV_EVENT_LONG_PRESSED_REPEAT:
	{
				counter++;
				
				if (counter > 100)
					counter = 100;
		
				sprintf(buf,  "%d" , counter);
				lv_obj_set_style_local_text_font(guider_ui.screen_counter, LV_LABEL_PART_MAIN, LV_STATE_DEFAULT, &lv_font_simsun_48);
				lv_label_set_text(guider_ui.screen_counter, buf);
				lv_chart_set_next(guider_ui.screen_chart_1, guider_ui_chart_series.ser1, 5 * lv_slider_get_value(guider_ui.screen_slider_1));
				lv_chart_set_next(guider_ui.screen_chart_1, guider_ui_chart_series.ser2, 5 * lv_slider_get_left_value(guider_ui.screen_slider_1));
				lv_chart_set_next(guider_ui.screen_chart_1, guider_ui_chart_series.ser0, counter);
		
	}
		break;
	case LV_EVENT_CLICKED:
	{
				counter++;
				
				if (counter > 100)
					counter = 100;
		
				sprintf(buf,  "%d" , counter);
				lv_obj_set_style_local_text_font(guider_ui.screen_counter, LV_LABEL_PART_MAIN, LV_STATE_DEFAULT, &lv_font_simsun_48);
				lv_label_set_text(guider_ui.screen_counter, buf);
				lv_chart_set_next(guider_ui.screen_chart_1, guider_ui_chart_series.ser1, 5 * lv_slider_get_value(guider_ui.screen_slider_1));
				lv_chart_set_next(guider_ui.screen_chart_1, guider_ui_chart_series.ser2, 5 * lv_slider_get_left_value(guider_ui.screen_slider_1));
				lv_chart_set_next(guider_ui.screen_chart_1, guider_ui_chart_series.ser0, counter);
		
	}
		break;
	default:
		break;
	}
}

static void screen_minusevent_handler(lv_obj_t * obj, lv_event_t event)
{
	switch (event)
	{
	case LV_EVENT_LONG_PRESSED_REPEAT:
	{
				if(counter) counter--;
				sprintf(buf,  "%d" , counter);
				lv_obj_set_style_local_text_font(guider_ui.screen_counter, LV_LABEL_PART_MAIN, LV_STATE_DEFAULT, &lv_font_simsun_48);
				lv_label_set_text(guider_ui.screen_counter, buf);
				lv_chart_set_next(guider_ui.screen_chart_1, guider_ui_chart_series.ser1, 5 * lv_slider_get_value(guider_ui.screen_slider_1));
				lv_chart_set_next(guider_ui.screen_chart_1, guider_ui_chart_series.ser2, 5 * lv_slider_get_left_value(guider_ui.screen_slider_1));
				lv_chart_set_next(guider_ui.screen_chart_1, guider_ui_chart_series.ser0, counter);
		
	}
		break;
	case LV_EVENT_CLICKED:
	{
				if(counter) counter--;
				sprintf(buf,  "%d" , counter);
				lv_obj_set_style_local_text_font(guider_ui.screen_counter, LV_LABEL_PART_MAIN, LV_STATE_DEFAULT, &lv_font_simsun_48);
				lv_label_set_text(guider_ui.screen_counter, buf);
				lv_chart_set_next(guider_ui.screen_chart_1, guider_ui_chart_series.ser1, 5 * lv_slider_get_value(guider_ui.screen_slider_1));
				lv_chart_set_next(guider_ui.screen_chart_1, guider_ui_chart_series.ser2, 5 * lv_slider_get_left_value(guider_ui.screen_slider_1));
				lv_chart_set_next(guider_ui.screen_chart_1, guider_ui_chart_series.ser0, counter);
		
	}
		break;
	default:
		break;
	}
}

static void screen_slider_1event_handler(lv_obj_t * obj, lv_event_t event)
{
	switch (event)
	{
	case LV_EVENT_VALUE_CHANGED:
	{
			    //When the rotary knob is turned
			    //PRINTF("LV_EVENT_VALUE_CHANGED\n");
			    lv_chart_set_next(guider_ui.screen_chart_1, guider_ui_chart_series.ser1, 5 * lv_slider_get_value(guider_ui.screen_slider_1));
		        lv_chart_set_next(guider_ui.screen_chart_1, guider_ui_chart_series.ser2, 5 * lv_slider_get_left_value(guider_ui.screen_slider_1));
		    	lv_chart_set_next(guider_ui.screen_chart_1, guider_ui_chart_series.ser0, counter);
		
	}
		break;
	default:
		break;
	}
}

void events_init_screen(lv_ui *ui)
{
	lv_obj_set_event_cb(ui->screen_plus, screen_plusevent_handler);
	lv_obj_set_event_cb(ui->screen_minus, screen_minusevent_handler);
	lv_obj_set_event_cb(ui->screen_slider_1, screen_slider_1event_handler);
}
